<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.huanhu.dao.CollectDao">

    <resultMap type="cn.huanhu.entity.Collect" id="CollectMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="BOOLEAN"/>
        <result property="songId" column="song_id" jdbcType="INTEGER"/>
        <result property="songListId" column="song_list_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CollectMap">
        select
        id, user_id, type, song_id, song_list_id, create_time
        from music.collect
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CollectMap">
        select
        id, user_id, type, song_id, song_list_id, create_time
        from music.collect
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CollectMap">
        select
        id, user_id, type, song_id, song_list_id, create_time
        from music.collect
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="songId != null">
                and song_id = #{songId}
            </if>
            <if test="songListId != null">
                and song_list_id = #{songListId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into music.collect(user_id, type, song_id, song_list_id, create_time)
        values (#{userId}, #{type}, #{songId}, #{songListId}, #{createTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update music.collect
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="songId != null">
                song_id = #{songId},
            </if>
            <if test="songListId != null">
                song_list_id = #{songListId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from music.collect where id = #{id}
    </delete>

</mapper>